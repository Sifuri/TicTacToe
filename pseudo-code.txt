Pseudo-Code

Game Default: 
 *Whoever goes first is 'X'
 
- Select Start or Quit***
-   if start: display instructions
-      prompt: Human Vs Machine or Human Vs Human***
-        if Human Vs Machines
          assign gloval variable P2 to machine object
          select mode: Novice, Intermediate, Advance***
            If either
              select: Go first, Go second 
                if either
                  -assign symbols to users 
                  -create empty board
                  -display board
                  -unless someone wins 
                    -if it's the humans turn
                       prompt the human for their choice 
                       update the board with the users choice
                    -else
                      calculate the CPU's choice
                      update the board with the CPU's choice
                    end
                    -display the board
                    -switch turns
                  -Congratulate the victor or declare a tie
                  -Prompt user to play again? or quit
               elsif Human Vs Human
                        assign global variable p2 to human instance
                        ......
                        ......
                        ......
       elsif quit: 
          exit game
             
                    

Object Oriented Path:

Create a human class with methods for moving
Create a Machine class with methods for moving, and assuming various levels of skill {novice, intermediate, advance}
Create a Game_Board class with methods for {New Board, Display Board}
Create an Instructor or Referee class with methods for {Starting game, display instructions, determining winner, play_again? }


AI Strategy:

All AI modes should initially evaluate whether the machine or human can win the next turn. Second line of reasoning will distinguish AI modes by selecting open spaces randomly, choosing non-random spaces, and selecting non-random quality spaces.

Novice: Choose random spaces
Intermediate: Choose non-random spaces
Advanced: Choose "optimal" spaces